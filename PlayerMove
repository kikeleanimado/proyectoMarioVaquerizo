

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMove : MonoBehaviour
{

    //Creamos las variables
    public float runSpeed = 2; //movimiento en el eje horizontal
    public float jumpSpeed = 3;

    Rigidbody2D rb2D; //Necesitamos una referencia de nuestro rigidbody para lo que seria el tema de la fisicas (el movimiento, la velocidad, la gravedad , etc). 


    //Para mejorar el salto. AÃ±adimos 3 variables

    public bool betterJump = false; //Para actvar o desactivar esye salto por si lo queremos dejar como antes
    
    //Estos valores lo que van hacer es dependiendo de si se pulsa mas o menos el espacio pues caigamos mas rapido o mas lento. Tipo sensacion arcade , tipo mario bros
    public float fallMultiplayer = 0.5f; //Lo de f se pone cuando el valor es float
    public float lowJumpMultiplayer = 1f;

    public SpriteRenderer spriteRenderer; //Relacion del componente spriterenderer
    public Animator animator; //Relacion de referencia del componente animator



    void Start() {


        //Hacemos referencia de nuestro rigidbody al personaje
        rb2D = GetComponent<Rigidbody2D>(); //ESta variable del rigidbody va a ser getcomponent rigidbody2D. Entoncesva a buscar dentro de nuestro personaje y diga a vale quieres el componente rigidbody2D que lo meta en la variable rb2D

       
    }


    //Para el tema de las fisicas prefiere utilizar el FixedUpdate antes que el void Update

    void FixedUpdate() {
        //Ahora tenemos que comprobar si estamos pulsando la tecla a o d (en nuestro tecaldo) o la felcha izuqierda o derecha 

        if (Input.GetKey("d") || Input.GetKey("right")) //Si pulsamo la tecla d o la flecha hacia la izquierda hara lo que tiene dentro de  ese if
        {
            //Queremos que cuando pulse la d o la tecla derecha el personaje se muva hacai la derecha.
            rb2D.velocity = new Vector2(runSpeed, rb2D.velocity.y); //Hacemos referencia a ese rigidbody2D (rb2D) . velocity. Luego ahcemos un vector2 para decirle qen que direccion queremos ir. Queremos ir en la direccion del eje x (runSPeed) y al del eje y queremos que se queda como esta. Poorque solo queremos ir hacia la derecha al pulsar la tecla "d" o la flecha hacai la derecha.

            spriteRenderer.flipX = false; //cuando le damos a la flecha derecha o a la d el personaje mirar hacia la derecha.  Tiene qeu estar desactivado en ese momento.

            animator.SetBool("Run", true);
        }

        else if (Input.GetKey("a") || Input.GetKey("left"))
            {
                rb2D.velocity = new Vector2(-runSpeed, rb2D.velocity.y); //Para ir hacia la izquierda es lo mismo pero el runSpeed en negativo 

                spriteRenderer.flipX = true; //En el meomnto que el persoanje mrie hacia la izquierda porque hemos pulsdado la teclad a o la flecha izquierda. En ese moimento tiene que estar en true (activado).

                animator.SetBool("Run", true);
        }

            //Y que ocurre si no pulsamos nada? Pues queremos que el persoanje este quieto
            else
            {
                rb2D.velocity = new Vector2(0, rb2D.velocity.y); //Ponemos 0 ene el eje x , pero el eje y lo mantenemos tal cual esta tambien.

                animator.SetBool("Run", false);
        }

        //Para poder saltar

        if (Input.GetKey("space") && CheckGround.isGrounded) //Cuando pulsemnos espacio y este en el suelo 
        {
            rb2D.velocity = new Vector2(rb2D.velocity.x, jumpSpeed); //Pues saltaremos. Para saltar lo que tenemos que cambiar es el eje y y el eje x mantenerlo
        }

        if(CheckGround.isGrounded == false) //en el momento que no estemos en el suelo
        {

            animator.SetBool("Jump", true);
            animator.SetBool("Run", false);
        }

        if (CheckGround.isGrounded == true) //en el momento que no estemos en el suelo
        {

            animator.SetBool("Jump", false);
            
        }



        //Vamos a crear otro if para poner iu nuestro betterjump esta activado

        if (betterJump)
        {

            if(rb2D.velocity.y < 0) //si nuestra velocidad en el eje y ( vertical) es menor de cero
            {
                rb2D.velocity += Vector2.up * Physics2D.gravity.y * (fallMultiplayer) * Time.deltaTime; //Up es como poner 0.1. Lo multiplicamos por la gravedad de nuestro eje y y ahora es cuando entra en juego nuestro . El time.deltatime ayuda a que nop haya inconsistencias en los frames por segundo  entonces saltemos mas rapido o mas lento dependiendo de nuestro frame.

            }

            if (rb2D.velocity.y > 0 && !Input.GetKey ("space")) //si nuestra velocidad en el eje y (vertical) es mayor que cero. Tenemos que decirletambien ademas si no estamos pulsando 
            {
                rb2D.velocity += Vector2.up * Physics2D.gravity.y * (lowJumpMultiplayer) * Time.deltaTime;

            }
        }

        
    }
}





